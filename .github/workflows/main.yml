name: Update TZ Data

on:
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday at 00:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install requests
        run: pip install requests

      - name: Download latest zones.csv
        run: curl -sSLO https://raw.githubusercontent.com/nayarsystems/posix_tz_db/master/zones.csv

      - name: Generate tz_data.py with timestamp and version
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          VERSION=$(cat version.txt)
          IFS='.' read MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          mkdir -p generated
          echo "# Generated on $TIMESTAMP" > generated/tz_data.py
          echo "# Version $NEW_VERSION" >> generated/tz_data.py
          echo "" >> generated/tz_data.py
          echo "tz_table = {" >> generated/tz_data.py

          tail -n +1 zones.csv | while IFS=, read -r iana posix; do
            iana_clean=$(echo "$iana" | tr -d '"')
            posix_clean=$(echo "$posix" | tr -d '"')
            echo "    \"${iana_clean,,}\": \"$posix_clean\"," >> generated/tz_data.py
          done

          echo "}" >> generated/tz_data.py
          echo "" >> generated/tz_data.py
          echo "def lookup(iana_name):" >> generated/tz_data.py
          echo "    return tz_table.get(iana_name.lower().strip())" >> generated/tz_data.py

      - name: Compare and commit only if real tz_table changed
        run: |
          mkdir -p existing
          tail -n +3 generated/tz_data.py > generated/core.py
          tail -n +3 tz_data.py > existing/core.py || touch existing/core.py

          if ! diff -q generated/core.py existing/core.py >/dev/null; then
            VERSION=$(cat version.txt)
            IFS='.' read MAJOR MINOR PATCH <<< "$VERSION"
            PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            echo "$NEW_VERSION" > version.txt

            mv generated/tz_data.py tz_data.py

            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add tz_data.py version.txt
            git commit -m "Update tz_data.py to version $NEW_VERSION"
            git tag -a "v$NEW_VERSION" -m "Version $NEW_VERSION"
            git push origin main --follow-tags
          else
            echo "No changes to tz_table â€” skipping commit and tag."
          fi
